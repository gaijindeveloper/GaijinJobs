apply plugin: 'com.android.application'
apply from: '../config/quality.gradle'

android {
    compileSdkVersion 23
    buildToolsVersion "21.1.2"

    lintOptions {
        lintConfig file("../config/quality/lint/lint.xml")
        lintOptions {
            abortOnError false
        }
    }

    defaultConfig {
        applicationId "jp.gaijins.jobs"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 100
        versionName "1.0.0"
    }

    // If you intend to create a signed apk locally following steps are required:
    // 1. Create keystore file for release (release.keystore)
    // 2. Create settings file for keystore with contents as below :
    //    key.store.password=<your keystore password>
    //    key.alias=<alias for your keystore>
    //    key.alias.password=<your alias password>
    // 3. Keep files created in (1) and (2) under same directory
    // 4. Add directory path of (3) to an environment variable named KEYSTORE
    // 5. Run "gradlew assembleRelease" from command line
    signingConfigs {
        release
    }
    loadSigning(android.signingConfigs.release)

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles 'proguard-android-optimize.txt', 'proguard-project.txt',
                    'proguard-project-log.txt', 'proguard-google-play-services.txt'

            signingConfig signingConfigs.release.keyAlias ? signingConfigs.release : null
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.1.0'
    compile 'com.android.support:recyclerview-v7:23.1.0'
    compile 'com.android.support:cardview-v7:23.1.0'
    compile 'org.jsoup:jsoup:1.8.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.google.android.gms:play-services-base:8.4.0'
    compile 'com.google.android.gms:play-services-analytics:8.4.0'
    compile 'com.google.code.gson:gson:2.4'
    compile 'proguard:annotations:4.6'
}

void loadSigning(keystore) {
    // keystore env for CI
    def keystorePath = System.getenv('KEYSTORE')
    if (keystorePath) {
        Properties props = new Properties()
        props.load(new FileInputStream(new File(keystorePath, 'keystore.properties')))

        keystore.storeFile = new File(keystorePath, 'release.keystore')
        keystore.storePassword props['key.store.password']
        keystore.keyAlias props['key.alias']
        keystore.keyPassword props['key.alias.password']
    }

}
